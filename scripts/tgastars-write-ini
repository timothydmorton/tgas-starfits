#!/usr/bin/env python
import sys, os
import numpy as np
import argparse

from tgastars.write import write_ini
from multiprocessing import Pool

if __name__=='__main__':

    parser = argparse.ArgumentParser(description='Write star.ini files for given indices of TGAS table')

    parser.add_argument('indices', nargs='*', type=int)
    parser.add_argument('-o','--overwrite', action='store_true')
    parser.add_argument('-v','--verbose', action='store_true')
    parser.add_argument('-p','--processes', type=int, default=1)
    parser.add_argument('--all', action='store_true')
    parser.add_argument('-n', type=int, default=None)
    parser.add_argument('-e', '--exceptions', action='store_true')

    args = parser.parse_args()

    if args.all:
        from tgastars.data import TGAS
        N = len(TGAS)
        inds = np.arange(N)
        np.random.shuffle(inds)
        if args.n is not None:
            inds = inds[:args.n]
    else:
        inds = args.indices

    def do_the_thing(i):
        return write_ini(i, raise_exceptions=args.exceptions, overwrite=args.overwrite)

    if args.processes > 1:
        pool = Pool(processes=args.processes)
        pool.map(do_the_thing, inds)
    else:
        map(do_the_thing, inds)
